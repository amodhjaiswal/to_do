version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
      
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 288761769499.dkr.ecr.ap-south-1.amazonaws.com
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:-latest}  # Use :- for default value if COMMIT_HASH is empty
      
  build:
    commands:
      - echo Building the Docker image...
      - docker build -t to-do-ecr .
      
  post_build:
    commands:
      - echo Tagging the Docker image...
      - docker tag to-do-ecr:latest 288761769499.dkr.ecr.ap-south-1.amazonaws.com/to-do-ecr:latest
      - echo Pushing the Docker image to ECR...
      - docker push 288761769499.dkr.ecr.ap-south-1.amazonaws.com/to-do-ecr:latest
      - docker push 288761769499.dkr.ecr.ap-south-1.amazonaws.com/to-do-ecr:$IMAGE_TAG
      - printf '[{"name":"exp-code-pipeline","imageUri":"%s"}]' 288761769499.dkr.ecr.ap-south-1.amazonaws.com/to-do-ecr:$IMAGE_TAG > imagedefinitions.json
      
artifacts:
  files: imagedefinitions.json
